%% sl_kafka_utils.tlc

%% Copyright 2019 The MathWorks, Inc.

%if !EXISTS("::SL_KAFKA_UTILS_TLC")
    %assign ::SL_KAFKA_UTILS_TLC = TLC_TRUE

    %function FcnKafkaDebug()
        %% %return TLC_TRUE
        %return TLC_FALSE
    %endfunction  %% FcnKafkaDebug

    %function FcnKafkaBlocksSetup() void
        %if !EXISTS("::SL_KAFKA_BLOCKTYPE_INIT")
            %assign ::SL_KAFKA_BLOCKTYPE_INIT = TLC_TRUE
            %warning "In FcnKafkaBlocksSetup"
            %assign srcDir = FEVAL("kafka.getRoot", "app", "sfun", "src")
            %assign rdIncDir = FEVAL("kafka.getRoot", "..", "CPP", "librdkafka", "src")
            %<LibAddToCommonIncludes("rdkafka.h")>
            %<LibAddToCommonIncludes("stdio.h")>
            %<LibAddToCommonIncludes("stdlib.h")>
            %<LibAddToCommonIncludes("string.h")>
            %<LibAddToCommonIncludes("ec_kafka_utils.h")>
            %% %<LibAddToModelSources("ec_kafka_utils")>
            %<LibAddToCommonIncludes("mw_kafka_utils.h")>
            %% %<LibAddToModelSources("mw_kafka_utils")>
        %endif
    %endfunction


%endif